// Generated by ts-to-zod
import { z } from "zod";
import { Json } from "./types";

export const jsonSchema: z.ZodSchema<Json> = z.lazy(() =>
  z
    .union([
      z.string(),
      z.number(),
      z.boolean(),
      z.record(jsonSchema),
      z.array(jsonSchema),
    ])
    .nullable(),
);

export const channelsRowSchema = z.object({
  id: z.number(),
  data: jsonSchema.nullable(),
  slug: z.string().nullable(),
});

export const channelsInsertSchema = z.object({
  id: z.number().optional(),
  data: jsonSchema.optional().nullable(),
  slug: z.string().optional().nullable(),
});

export const channelsUpdateSchema = z.object({
  id: z.number().optional(),
  data: jsonSchema.optional().nullable(),
  slug: z.string().optional().nullable(),
});

export const messagesRowSchema = z.object({
  id: z.number(),
  data: jsonSchema.nullable(),
  message: z.string().nullable(),
  username: z.string(),
  channel_id: z.number(),
});

export const messagesInsertSchema = z.object({
  id: z.number().optional(),
  data: jsonSchema.optional().nullable(),
  message: z.string().optional().nullable(),
  username: z.string(),
  channel_id: z.number(),
});

export const messagesUpdateSchema = z.object({
  id: z.number().optional(),
  data: jsonSchema.optional().nullable(),
  message: z.string().optional().nullable(),
  username: z.string().optional(),
  channel_id: z.number().optional(),
});

export const shopsRowSchema = z.object({
  id: z.number(),
  address: z.string().nullable(),
  shop_geom: z.unknown().nullable(),
});

export const shopsInsertSchema = z.object({
  id: z.number(),
  address: z.string().optional().nullable(),
  shop_geom: z.unknown().optional().nullable(),
});

export const shopsUpdateSchema = z.object({
  id: z.number().optional(),
  address: z.string().optional().nullable(),
  shop_geom: z.unknown().optional().nullable(),
});

export const userStatusSchema = z.union([
  z.literal("ONLINE"),
  z.literal("OFFLINE"),
]);

export const usersInsertSchema = z.object({
  username: z.string(),
  data: jsonSchema.optional().nullable(),
  age_range: z.unknown().optional().nullable(),
  catchphrase: z.unknown().optional().nullable(),
  status: userStatusSchema.optional().nullable(),
});

export const usersUpdateSchema = z.object({
  username: z.string().optional(),
  data: jsonSchema.optional().nullable(),
  age_range: z.unknown().optional().nullable(),
  catchphrase: z.unknown().optional().nullable(),
  status: userStatusSchema.optional().nullable(),
});

export const nonUpdatableViewRowSchema = z.object({
  username: z.string().nullable(),
});

export const updatableViewRowSchema = z.object({
  username: z.string().nullable(),
  non_updatable_column: z.number().nullable(),
});

export const updatableViewInsertSchema = z.object({
  username: z.string().optional().nullable(),
  non_updatable_column: z.never().optional(),
});

export const updatableViewUpdateSchema = z.object({
  username: z.string().optional().nullable(),
  non_updatable_column: z.never().optional(),
});

export const usersRowSchema = z.object({
  username: z.string(),
  data: jsonSchema.nullable(),
  age_range: z.unknown().nullable(),
  catchphrase: z.unknown().nullable(),
  status: userStatusSchema.nullable(),
});
